{"version":3,"sources":["requests.js","Row.js","Banner.js","components/Home.js","components/FAQ.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","axios","get","then","response","data","results","catch","error","console","log","className","map","movie","src","poster_path","backdrop_path","alt","name","id","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Home","FAQ","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","to","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52e2314a.chunk.js","sourcesContent":["const API_KEY =  \"4c953cd51ef2536eba5994c2da377738\"\r\n\r\nconst requests={\r\n    \r\n\r\n    fetchTrending :\t`/trending/all/week?api_key=${API_KEY}&language=en-us`,\r\n    fetchNetflixOriginals :\t`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated :\t`/movie/top_rated?api_key=${API_KEY}&language=en-us`,\r\n    fetchActionMovies :\t`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies :\t`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies :\t`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies :`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries :`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\nexport default requests;","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport requests from './requests'\r\nimport './Row.css'\r\nconst baseURL='http://api.themoviedb.org/3'\r\nconst imgBaseURL=\"https://image.tmdb.org/t/p/original\"        \r\n//const API_KEY='4c953cd51ef2536eba5994c2da377738'\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n    //console.log(fetchUrl)\r\n    const [movies, setMovies] = useState([])\r\n    \r\n    useEffect(() => {\r\n        //axios.get('./data/topTrending.json')\r\n        //axios.get('https://api.themoviedb.org/3/movie/550?api_key=bb91c536c837ba7f19b9d2007a650e3d')\r\n        //axios.get('http://api.themoviedb.org/3/trending/all/week?api_key=4c953cd51ef2536eba5994c2da377738&language=en-us')\r\n        \r\n        axios.get(`${baseURL}${fetchUrl}`)\r\n        .then(response=>{\r\n            //console.log(response)\r\n            setMovies(response.data.results)\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }, [movies])\r\n    //console.table(movies)\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters\">\r\n                {movies.map(movie=>\r\n                <img \r\n                    className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                    key={movie.id}\r\n                    src={`${imgBaseURL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                    alt={movie.name}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport requests from './requests';\r\nimport \"./Banner.css\"\r\nconst baseURL='http://api.themoviedb.org/3'\r\nconst imgBaseURL=\"https://image.tmdb.org/t/p/original\"  \r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`${baseURL}${requests.fetchNetflixOriginals}`)\r\n        .then(response=>{\r\n            setMovie(\r\n                response.data.results[Math.floor(Math.random()*response.data.results.length-1)]    \r\n            );\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n    //console.log(movie)\r\n    function truncate(str,n){\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n    return (\r\n        <header \r\n            className=\"banner\"\r\n            style={{\r\n                backgroundSize:\"cover\",\r\n                backgroundImage:`url(\"${imgBaseURL}${movie?.backdrop_path}\")`,\r\n                backgroundPosition:\"center center\"\r\n            }}\r\n            > \r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n\r\n                </div>\r\n            <h1 className=\"banner_description\">\r\n                {/*{movie.overview} */}\r\n                <br/>\r\n                {truncate(movie.overview,150)}\r\n            </h1>\r\n            </div>\r\n            <div className=\"banner_fadeBottom\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <h2>Home component</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nfunction FAQ() {\r\n    return (\r\n        <div className=\"faq\">\r\n            <h3>This is FAQ component</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FAQ\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./Nav.css\"\r\nimport {BrowserRouter,Route,Link} from \"react-router-dom\"\r\nimport Home from './components/Home'\r\nimport FAQ from './components/FAQ'\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n       window.addEventListener(\"scroll\",()=>{\r\n           if(window.scrollY > 100){\r\n               handleShow(true)\r\n           }\r\n           else\r\n            handleShow(false);\r\n\r\n            return ()=>{\r\n                window.removeEventListener(\"scroll\")\r\n            }\r\n       }) \r\n    }, [])\r\n    \r\n\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <img\r\n                className=\"nav_logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n                alt=\"netflix-logo\"\r\n                >\r\n            </img>\r\n            \r\n            <BrowserRouter>\r\n            <div className=\"nav_links\">\r\n                <Link className=\"nav_link\" to=\"/home\">HOME</Link>\r\n                <Link className=\"nav_link\" to=\"/faq\">ABOUT</Link>\r\n                <Link className=\"nav_link\" to=\"/faq\">CONTACT</Link>\r\n                <Link className=\"nav_link\" to=\"/faq\">FAQ</Link>\r\n            </div>\r\n            <div className=\"nav_links_right\">\r\n                <Link className=\"nav_link\" to=\"/faq\">PROFILE</Link>\r\n            </div>\r\n                <Route path=\"/home\" component={Home}/>\r\n                <Route path=\"/faq\" component={FAQ}/>\r\n                <Route />\r\n                <Route />\r\n            \r\n            </BrowserRouter>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import './App.css';\nimport Row from './Row'\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\nfunction App() {\n  return (\n    <div className=\"App\"> \n      {/*<Row title=\"NETFLIX ORIGINALS\" fetchUrl='./data/netflixOriginals.json'/>\n      <Row title=\"TOP TRENDING\" fetchUrl='./data/topTrending.json'/>\n      */}\n      <Nav/>\n      <Banner/>\n      <Row \n        title=\"NETFLIX ORIGINALS\" \n        //isLargeRow={true} //same as below\n        isLargeRow \n        fetchUrl={requests.fetchNetflixOriginals}/>\n      <Row title=\"TOP TRENDING\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"TOP RATED\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"HORROR MOVIES\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"ROMANCE MOVIES\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"ACTION MOVIES\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"COMEDY MOVIES\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"DOCUMENTARY MOVIES\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}